è
IC:\Users\patrick.braga\source\repos\Hero\src\Hero.Shared\Api\BaseRoute.cs
	namespace 	
Shared
 
. 
Api 
{ 
[ 
AttributeUsage 
( 
AttributeTargets $
.$ %
Class% *
|+ ,
AttributeTargets- =
.= >
Method> D
,D E
AllowMultipleF S
=T U
trueV Z
,Z [
	Inherited\ e
=f g
trueh l
)l m
]m n
public 

class 
	BaseRoute 
: 
RouteAttribute +
{ 
public 
	BaseRoute 
( 
string 

controller  *
)* +
:		 
base		 
(		 
$"		 
$str		 
{		 

controller		 #
}		# $
"		$ %
)		% &
{

 	
} 	
} 
}  
TC:\Users\patrick.braga\source\repos\Hero\src\Hero.Shared\Api\EnvironmentVariables.cs
	namespace 	
Shared
 
. 
Api 
{ 
public 

class  
EnvironmentVariables %
{ 
} 
} …
TC:\Users\patrick.braga\source\repos\Hero\src\Hero.Shared\Core\Entities\BaseEntity.cs
	namespace 	
Shared
 
. 
Core 
. 
Entities 
{ 
public 

class 

BaseEntity 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
bool 
Ativo 
{ 
get 
;  
set! $
;$ %
}& '
public 
bool 
Deletado 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
DataCadastro $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public

 

BaseEntity

 
(

 
)

 
{ 	
Id 
= 
Guid 
. 
NewGuid 
( 
) 
;  
Ativo 
= 
true 
; 
Deletado 
= 
false 
; 
DataCadastro 
= 
DateTime #
.# $
Now$ '
;' (
} 	
} 
} ¸
YC:\Users\patrick.braga\source\repos\Hero\src\Hero.Shared\Core\Models\BaseRequestFilter.cs
	namespace 	
Shared
 
. 
Core 
. 
Models 
{ 
public 

class 
BaseRequestFilter "
{ 
public 
int 
Take 
{ 
get 
; 
set "
;" #
}$ %
=& '
$num( +
;+ ,
public 
int 
? 
Page 
{ 
get 
; 
set  #
;# $
}% &
public 
int 
? 
Offset 
{ 
get  
;  !
set" %
;% &
}' (
=) *
$num+ ,
;, -
public 
string 
? 
SortingProp "
{# $
get% (
;( )
set* -
;- .
}/ 0
public		 
bool		 
?		 
	Ascending		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
=		- .
true		/ 3
;		3 4
internal 
int 
Skip 
{ 	
get 
{ 
if 
( 
Offset 
!= 
null "
)" #
return 
( 
int 
)  
Offset  &
;& '
if 
( 
Page 
!= 
null  
)  !
return 
( 
( 
int  
)  !
Page! %
-& '
$num( )
)) *
*+ ,
Take- 1
;1 2
return 
$num 
; 
} 
} 	
} 
} £
TC:\Users\patrick.braga\source\repos\Hero\src\Hero.Shared\Core\Models\BaseResponse.cs
	namespace 	
Shared
 
. 
Core 
. 
Models 
{ 
public 

class 
BaseResponse 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
bool 
Ativo 
{ 
get 
;  
set! $
;$ %
}& '
public 
bool 
Deletado 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
DataCadastro $
{% &
get' *
;* +
set, /
;/ 0
}1 2
}		 
}

 ø!
GC:\Users\patrick.braga\source\repos\Hero\src\Hero.Shared\Core\Result.cs
	namespace 	
Shared
 
. 
Core 
{ 
public 

class 
Result 
< 
T 
> 
: 
Result #
where$ )
T* +
:, -
class. 3
{ 
public 
Result 
( 
) 
{ 
} 
public		 
Result		 
(		 
T		 
value		 
)		 
{

 	
Value 
= 
value 
; 
} 	
public 
T 
Value 
{ 
get 
; 
set !
;! "
}# $
public 
int 
Count 
{ 
get 
; 
set  #
;# $
}% &
} 
public 

class 
Result 
{ 
public 
bool 

HasSuccess 
{  
get! $
;$ %
	protected& /
set0 3
;3 4
}5 6
public 
bool 
HasError 
=> 
!  !

HasSuccess! +
;+ ,
public 
List 
< 
string 
> 
Errors "
{# $
get% (
;( )
}* +
public 
HttpStatusCode 
HttpStatusCode ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
DateTime 
DataRequisicao &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
Result 
( 
) 
{ 	

HasSuccess 
= 
true 
; 
HttpStatusCode 
= 
HttpStatusCode +
.+ ,
OK, .
;. /
Errors 
= 
new 
List 
< 
string $
>$ %
(% &
)& '
;' (
DataRequisicao 
= 
DateTime %
.% &
Now& )
;) *
}   	
public"" 
void"" 
	WithError"" 
("" 
string"" $
errorMessage""% 1
)""1 2
{## 	
HttpStatusCode$$ 
=$$ 
HttpStatusCode$$ +
.$$+ ,

BadRequest$$, 6
;$$6 7

HasSuccess%% 
=%% 
false%% 
;%% 
Errors&& 
.&& 
Add&& 
(&& 
errorMessage&& #
)&&# $
;&&$ %
DataRequisicao'' 
='' 
DateTime'' %
.''% &
Now''& )
;'') *
}(( 	
public** 
void** 
	WithError** 
(** 
List** "
<**" #
string**# )
>**) *
errorMessage**+ 7
)**7 8
{++ 	
HttpStatusCode,, 
=,, 
HttpStatusCode,, +
.,,+ ,

BadRequest,,, 6
;,,6 7

HasSuccess-- 
=-- 
false-- 
;-- 
Errors.. 
... 
AddRange.. 
(.. 
errorMessage.. (
)..( )
;..) *
DataRequisicao// 
=// 
DateTime// %
.//% &
Now//& )
;//) *
}00 	
public22 
void22 
WithException22 !
(22! "
string22" (
errorMessage22) 5
)225 6
{33 	
HttpStatusCode44 
=44 
HttpStatusCode44 +
.44+ ,
InternalServerError44, ?
;44? @

HasSuccess55 
=55 
false55 
;55 
Errors66 
.66 
Add66 
(66 
errorMessage66 #
)66# $
;66$ %
DataRequisicao77 
=77 
DateTime77 %
.77% &
Now77& )
;77) *
}88 	
}99 
}:: ç	
PC:\Users\patrick.braga\source\repos\Hero\src\Hero.Shared\Infra\AsyncOutResult.cs
	namespace 	
Shared
 
. 
Infra 
{ 
public 

struct 
AsyncOutResult  
<  !
T! "
," #
OUT$ '
>' (
{ 
private 
T 
returnValue 
; 
private 
OUT 
result 
; 
public 
AsyncOutResult 
( 
T 
returnValue  +
,+ ,
OUT- 0
result1 7
)7 8
{		 	
this

 
.

 
returnValue

 
=

 
returnValue

 *
;

* +
this 
. 
result 
= 
result  
;  !
} 	
public 
T 
Result 
( 
out 
OUT 
result  &
)& '
{ 	
result 
= 
this 
. 
result  
;  !
return 
returnValue 
; 
} 	
} 
} ù*
MC:\Users\patrick.braga\source\repos\Hero\src\Hero.Shared\Infra\DataHelpers.cs
	namespace 	
Shared
 
. 
Infra 
{ 
public 

static 
class 
DataHelpers #
{ 
public 
static 
T 
CheckUpdateObject )
<) *
T* +
>+ ,
(, -
T- .
originalObj/ :
,: ;
T< =
	updateObj> G
)G H
whereI N
TO P
:Q R
classS X
{		 	
foreach

 
(

 
var

 
property

 !
in

" $
	updateObj

% .
.

. /
GetType

/ 6
(

6 7
)

7 8
.

8 9
GetProperties

9 F
(

F G
)

G H
)

H I
{ 
var 
updateValue 
=  !
property" *
.* +
GetValue+ 3
(3 4
	updateObj4 =
,= >
null? C
)C D
;D E
var 
originalValue !
=" #
originalObj$ /
./ 0
GetType0 7
(7 8
)8 9
.9 :
GetProperty: E
(E F
propertyF N
.N O
NameO S
)S T
?T U
.U V
GetValueV ^
(^ _
originalObj_ j
,j k
nulll p
)p q
;q r
if 
( 
updateValue 
==  "
null# '
||( *
updateValue+ 6
?6 7
.7 8
ToString8 @
(@ A
)A B
==C E
DateTimeF N
.N O
MinValueO W
.W X
ToStringX `
(` a
CultureInfoa l
.l m
CurrentCulturem {
){ |
)| }
{ 
property 
. 
SetValue %
(% &
	updateObj& /
,/ 0
originalValue1 >
)> ?
;? @
} 
} 
return 
	updateObj 
; 
} 	
public 
static 

IQueryable  
<  !
T! "
>" #
OrderByDynamic$ 2
<2 3
T3 4
>4 5
(5 6
this6 :

IQueryable; E
<E F
TF G
>G H
qI J
,J K
stringL R
	sortFieldS \
,\ ]
bool^ b
	ascendingc l
)l m
{ 	
var 
param 
= 

Expression "
." #
	Parameter# ,
(, -
typeof- 3
(3 4
T4 5
)5 6
,6 7
$str8 ;
); <
;< =
var 
prop 
= 

Expression !
.! "
Property" *
(* +
param+ 0
,0 1
	sortField2 ;
); <
;< =
var 
exp 
= 

Expression  
.  !
Lambda! '
(' (
prop( ,
,, -
param. 3
)3 4
;4 5
var 
method 
= 
	ascending "
?# $
$str% .
:/ 0
$str1 D
;D E
var 
types 
= 
new 
Type  
[  !
]! "
{# $
q% &
.& '
ElementType' 2
,2 3
exp4 7
.7 8
Body8 <
.< =
Type= A
}B C
;C D
var 
mce 
= 

Expression  
.  !
Call! %
(% &
typeof& ,
(, -
	Queryable- 6
)6 7
,7 8
method9 ?
,? @
typesA F
,F G
qH I
.I J

ExpressionJ T
,T U
expV Y
)Y Z
;Z [
return 
q 
. 
Provider 
. 
CreateQuery )
<) *
T* +
>+ ,
(, -
mce- 0
)0 1
;1 2
}   	
public"" 
static"" 
bool"" !
CheckExistingProperty"" 0
<""0 1
T""1 2
>""2 3
(""3 4
string""4 :
property""; C
)""C D
where""E J
T""K L
:""M N
class""O T
{## 	
return$$ 
!$$ 
string$$ 
.$$ 
IsNullOrEmpty$$ (
($$( )
property$$) 1
)$$1 2
&&$$3 5
typeof$$6 <
($$< =
T$$= >
)$$> ?
.$$? @
GetProperties$$@ M
($$M N
)$$N O
.$$O P
Any$$P S
($$S T
w$$T U
=>$$V X
string$$Y _
.$$_ `
Equals$$` f
($$f g
w$$g h
.$$h i
Name$$i m
,$$m n
property$$o w
,$$w x
StringComparison	$$y ‰
.
$$‰ Š&
CurrentCultureIgnoreCase
$$Š ¢
)
$$¢ £
)
$$£ ¤
;
$$¤ ¥
}%% 	
}&& 
}'' 